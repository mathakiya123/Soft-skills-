LAB EXERCISES

1.Creating a Simple Web Page
 Objective:Create a basic webpage using HTML and style it with CSS.
=><!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>My Basic Webpage</title>
  <style>

/* Reset */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* Body Styling */
body {
  font-family: Arial, sans-serif;
  background-color: #f3f3f3;
  color: #333;
}

/* Header Styling */
header {
  background-color: #3498db;
  color: white;
  text-align: center;
  padding: 20px;
  font-size: 1.5rem;
}

/* Navigation Bar */
nav {
  background-color: #2c3e50;
}

nav ul {
  display: flex;
  list-style-type: none;
  justify-content: center;
}

nav ul li a {
  color: white;
  text-decoration: none;
  padding: 15px 20px;
  display: block;
}

nav ul li a:hover {
  background-color: #1abc9c;
}

/* Main Content */
main {
  padding: 30px;
  background-color: white;
  margin: 20px auto;
  max-width: 800px;
  border-radius: 8px;
  box-shadow: 0 0 10px rgba(0,0,0,0.1);
}

/* Footer */
footer {
  background-color: #34495e;
  color: white;
  text-align: center;
  padding: 15px 0;
  margin-top: 30px;
  font-size: 0.9rem;
}

</style>
</head>
<body>

  <header>
    <h1>My First Webpage</h1>
  </header>

  <nav>
    <ul>
      <li><a href="#">Home</a></li>
      <li><a href="#">About</a></li>
      <li><a href="#">Projects</a></li>
      <li><a href="#">Contact</a></li>
    </ul>
  </nav>

  <main>
    <h2>Welcome!</h2>
    <p>This is a simple HTML page styled using an external CSS file. It includes a header, navigation bar, main content, and a footer.</p>
  </main>

  <footer>
    <p>&copy; 2025 My Basic Webpage</p>
  </footer>

</body>
</html>

Instructions:

1.1)  Create an HTMLfile (e.g.,index.html) that includes a header,a navigationbar,a main content section,and a footer.
=>index.html

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Simple Web Page</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 0;
    }

    header {
      background-color: #007BFF;
      color: white;
      padding: 15px 20px;
      text-align: center;
    }

    nav {
      background-color: #333;
      overflow: hidden;
    }

    nav ul {
      list-style-type: none;
      margin: 0;
      padding: 0;
    }

    nav ul li {
      float: left;
    }

    nav ul li a {
      display: block;
      color: white;
      text-align: center;
      padding: 14px 20px;
      text-decoration: none;
    }

    nav ul li a:hover {
      background-color: #575757;
    }

    main {
      padding: 20px;
      background-color: #f4f4f4;
      min-height: 300px;
    }

    footer {
      background-color: #222;
      color: white;
      text-align: center;
      padding: 10px 0;
    }

    /* Clear floats */
    nav::after {
      content: "";
      display: table;
      clear: both;
    }
  </style>
</head>
<body>

  <header>
    <h1>Welcome to My Website</h1>
  </header>

  <nav>
    <ul>
      <li><a href="#">Home</a></li>
      <li><a href="#">About</a></li>
      <li><a href="#">Services</a></li>
      <li><a href="#">Contact</a></li>
    </ul>
  </nav>

  <main>
    <h2>Main Content</h2>
    <p>This is a simple example of a webpage layout using HTML and CSS.</p>
  </main>

  <footer>
    <p>&copy; 2025 My Website | All rights reserved.</p>
  </footer>

</body>
</html>
 
1.2)  Style the page using an external CSS file(e.g.,styles.css).
=>index.html
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Simple Web Page</title>
  <link rel="stylesheet" href="styles.css">
</head>
<body>

  <header>
    <h1>Welcome to My Website</h1>
  </header>

  <nav>
    <ul>
      <li><a href="#">Home</a></li>
      <li><a href="#">About</a></li>
      <li><a href="#">Services</a></li>
      <li><a href="#">Contact</a></li>
    </ul>
  </nav>

  <main>
    <h2>Main Content</h2>
    <p>This is a simple example of a webpage layout using external CSS.</p>
  </main>

  <footer>
    <p>&copy; 2025 My Website | All rights reserved.</p>
  </footer>

</body>
</html>

=>external style sheet to connect a <link> tag
=> style.css
/* Reset default margins and paddings */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: Arial, sans-serif;
  background-color: #f4f4f4;
}

header {
  background-color: #007BFF;
  color: white;
  padding: 15px 20px;
  text-align: center;
}

nav {
  background-color: #333;
  overflow: hidden;
}

nav ul {
  list-style-type: none;
}

nav ul li {
  float: left;
}

nav ul li a {
  display: block;
  color: white;
  padding: 14px 20px;
  text-decoration: none;
}

nav ul li a:hover {
  background-color: #575757;
}

main {
  padding: 20px;
  min-height: 300px;
}

footer {
  background-color: #222;
  color: white;
  text-align: center;
  padding: 10px 0;
  margin-top: 20px;
}

nav::after {
  content: "";
  display: table;
  clear: both;
}


1.3)  Use CSS properties such as color,background-color,font-size,and  padding to enhance the design.
=>index.html
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Enhanced Web Page</title>
  <link rel="stylesheet" href="styles.css">
</head>
<body>

  <header>
    <h1>Welcome to My Website</h1>
  </header>

  <nav>
    <ul>
      <li><a href="#">Home</a></li>
      <li><a href="#">About</a></li>
      <li><a href="#">Services</a></li>
      <li><a href="#">Contact</a></li>
    </ul>
  </nav>

  <main>
    <h2>Main Content</h2>
    <p>This is a simple example of a webpage layout using external CSS with enhanced styles.</p>
  </main>

  <footer>
    <p>&copy; 2025 My Website | All rights reserved.</p>
  </footer>

</body>
</html>
=>style.css in connnect<link>tag
=> styles.css (enhanced with color, background-color, font-size, and padding) Add
=>/* Reset default spacing */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  background-color: #f0f8ff;
  color: #333;
  line-height: 1.6;
}

header {
  background-color: #007BFF;
  color: white;
  padding: 25px 20px;
  text-align: center;
  font-size: 1.8rem;
}

nav {
  background-color: #222;
}

nav ul {
  list-style: none;
  display: flex;
  justify-content: center;
}

nav ul li {
  margin: 0;
}

nav ul li a {
  display: block;
  padding: 16px 25px;
  color: white;
  text-decoration: none;
  font-size: 1rem;
  transition: background-color 0.3s;
}

nav ul li a:hover {
  background-color: #444;
}

main {
  padding: 30px;
  background-color: #ffffff;
  font-size: 1.1rem;
}

main h2 {
  color: #007BFF;
  font-size: 1.5rem;
  margin-bottom: 10px;
}

footer {
  background-color: #111;
  color: #ccc;
  text-align: center;
  padding: 15px 0;
  font-size: 0.9rem;
  margin-top: 30px;
}

/* Responsive Navigation Clear Fix */
nav::after {
  content: "";
  display: table;
  clear: both;
}

.)Implementing a Responsive Navigation Bar
6.)  objective: Create a Responsive Navigation Bar using html and css?
=> index.html
 <!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Responsive Navbar</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="style.css">
</head>
<body>

  <nav class="navbar">
    <div class="logo">MySite</div>
    
    <!-- Hamburger Menu Toggle -->
    <input type="checkbox" id="menu-toggle">
    <label for="menu-toggle" class="hamburger">&#9776;</label>

    <ul class="nav-links">
      <li><a href="#">Home</a></li>
      <li><a href="#">About</a></li>
      <li><a href="#">Services</a></li>
      <li><a href="#">Contact</a></li>
    </ul>
  </nav>

</body>
</html>
=>style.css
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: Arial, sans-serif;
}

.navbar {
  background-color: #333;
  color: #fff;
  padding: 15px 20px;
  display: flex;
  justify-content: space-between;
  align-items: center;
  position: relative;
}

.logo {
  font-size: 24px;
  font-weight: bold;
}

.nav-links {
  list-style: none;
  display: flex;
  gap: 20px;
}

.nav-links li a {
  color: #fff;
  text-decoration: none;
  font-size: 16px;
}

.hamburger {
  display: none;
  font-size: 28px;
  cursor: pointer;
  color: white;
}

/* Hide checkbox */
#menu-toggle {
  display: none;
}

/* Responsive */
@media (max-width: 768px) {
  .nav-links {
    flex-direction: column;
    background-color: #444;
    position: absolute;
    top: 60px;
    right: 20px;
    width: 160px;
    display: none;
    border-radius: 5px;
    padding: 10px;
  }

  #menu-toggle:checked + .hamburger + .nav-links {
    display: flex;
  }

  .hamburger {
    display: block;
  }
}

Instructions:
6.1)  Build a navigationbar using HTML<ul> and < li> elements.
=>index.html
=> <!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Navigation Bar Example</title>
  <link rel="stylesheet" href="styles.css">
</head>
<body>

  <nav>
    <ul class="navbar">
      <li><a href="#">Home</a></li>
      <li><a href="#">About</a></li>
      <li><a href="#">Services</a></li>
      <li><a href="#">Portfolio</a></li>
      <li><a href="#">Contact</a></li>
    </ul>
  </nav>

</body>
</html>

=>CSS:style.css
body {
  font-family: Arial, sans-serif;
  margin: 0;
  padding: 0;
}

/* Navigation Bar Styling */
.navbar {
  list-style-type: none;
  margin: 0;
  padding: 0;
  background-color: #333;
  display: flex;
  justify-content: center;
}

.navbar li {
  display: inline;
}

.navbar li a {
  display: block;
  color: white;
  text-align: center;
  padding: 14px 20px;
  text-decoration: none;
}

.navbar li a:hover {
  background-color: #575757;
}

6.2)Use CSS to style the navigationbar and make it responsive (e.g.,usingmedia
 queries) ?
=>index.html
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Responsive Navigation Bar</title>
  <link rel="stylesheet" href="styles.css">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
</head>
<body>

  <nav class="navbar">
    <div class="logo">MySite</div>
    <ul class="nav-links" id="navLinks">
      <li><a href="#">Home</a></li>
      <li><a href="#">About</a></li>
      <li><a href="#">Services</a></li>
      <li><a href="#">Contact</a></li>
    </ul>
    <div class="menu-toggle" onclick="toggleMenu()">☰</div>
  </nav>

  <script>
    function toggleMenu() {
      document.getElementById("navLinks").classList.toggle("active");
    }
  </script>

</body>
</html>

CSS:style.css
/* Basic Reset */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: Arial, sans-serif;
}

/* Navbar Styling */
.navbar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  background-color: #333;
  padding: 10px 20px;
}

.logo {
  color: white;
  font-size: 1.5rem;
  font-weight: bold;
}

.nav-links {
  list-style: none;
  display: flex;
}

.nav-links li {
  margin-left: 20px;
}

.nav-links li a {
  color: white;
  text-decoration: none;
  padding: 10px;
  transition: background-color 0.3s;
}

.nav-links li a:hover {
  background-color: #575757;
  border-radius: 4px;
}

/* Hamburger Icon */
.menu-toggle {
  display: none;
  font-size: 1.5rem;
  color: white;
  cursor: pointer;
}

/* Responsive Styling */
@media (max-width: 768px) {
  .nav-links {
    flex-direction: column;
    background-color: #333;
    width: 100%;
    position: absolute;
    top: 60px;
    left: -100%;
    transition: left 0.3s;
  }

  .nav-links.active {
    left: 0;
  }

  .menu-toggle {
    display: block;
  }

  .nav-links li {
    margin: 10px 0;
    text-align: center;
  }
}

6.3) Implement a dropdown menu for sub-navigation items.
=>index.html
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Dropdown Menu Example</title>
  <link rel="stylesheet" href="styles.css">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
</head>
<body>

  <nav class="navbar">
    <div class="logo">MySite</div>

    <ul class="nav-links" id="navLinks">
      <li><a href="#">Home</a></li>
      <li><a href="#">About</a></li>
      <li class="dropdown">
        <a href="#">Services ▾</a>
        <ul class="dropdown-content">
          <li><a href="#">Web Design</a></li>
          <li><a href="#">SEO</a></li>
          <li><a href="#">Marketing</a></li>
        </ul>
      </li>
      <li><a href="#">Contact</a></li>
    </ul>

    <div class="menu-toggle" onclick="toggleMenu()">☰</div>
  </nav>

  <script>
    function toggleMenu() {
      document.getElementById("navLinks").classList.toggle("active");
    }
  </script>

</body>
</html>

=>style.css
/* Reset */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: Arial, sans-serif;
}

/* Navbar */
.navbar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  background-color: #333;
  padding: 10px 20px;
  position: relative;
}

.logo {
  color: white;
  font-size: 1.5rem;
  font-weight: bold;
}

.nav-links {
  list-style: none;
  display: flex;
  align-items: center;
}

.nav-links li {
  position: relative;
  margin-left: 20px;
}

.nav-links li a {
  color: white;
  text-decoration: none;
  padding: 10px;
  display: block;
}

.nav-links li a:hover {
  background-color: #575757;
  border-radius: 4px;
}

/* Dropdown Menu */
.dropdown-content {
  display: none;
  position: absolute;
  top: 40px;
  left: 0;
  background-color: #444;
  min-width: 150px;
  z-index: 1;
  border-radius: 4px;
  overflow: hidden;
}

.dropdown-content li {
  margin: 0;
}

.dropdown-content li a {
  padding: 10px;
  color: white;
  display: block;
}

.dropdown:hover .dropdown-content {
  display: block;
}

/* Hamburger */
.menu-toggle {
  display: none;
  font-size: 1.5rem;
  color: white;
  cursor: pointer;
}

/* Responsive Styles */
@media (max-width: 768px) {
  .nav-links {
    flex-direction: column;
    background-color: #333;
    width: 100%;
    position: absolute;
    top: 60px;
    left: -100%;
    transition: left 0.3s;
  }

  .nav-links.active {
    left: 0;
  }

  .nav-links li {
    margin: 10px 0;
    text-align: center;
  }

  .menu-toggle {
    display: block;
  }

  /* Stack dropdown on mobile */
  .dropdown-content {
    position: relative;
    top: 0;
  }
}

 4.CSS Grid and Flexbox
=>Objective : Create are responsive layout using CSS Grid or Flexbox.
=>Instructions:
4.1)Build a grid layout for a gallery of images or a products how case using either CSSGrid or Flexbox ?
=>inde.html
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Image Gallery with CSS Grid</title>
  <link rel="stylesheet" href="styles.css">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
</head>
<body>

  <h2 class="title">Image Gallery</h2>

  <div class="gallery-grid">
    <div class="item"><img src="https://via.placeholder.com/300x200" alt="Image 1"></div>
    <div class="item"><img src="https://via.placeholder.com/300x200" alt="Image 2"></div>
    <div class="item"><img src="https://via.placeholder.com/300x200" alt="Image 3"></div>
    <div class="item"><img src="https://via.placeholder.com/300x200" alt="Image 4"></div>
    <div class="item"><img src="https://via.placeholder.com/300x200" alt="Image 5"></div>
    <div class="item"><img src="https://via.placeholder.com/300x200" alt="Image 6"></div>
  </div>

</body>
</html>
=> styles.css (Flexbox)
=>.gallery-grid {
  display: flex;
  flex-wrap: wrap;
  gap: 20px;
  justify-content: center;
  padding: 10px;
}

.item {
  width: calc(33.33% - 20px);
  background-color: white;
  padding: 10px;
  box-shadow: 0 0 10px rgba(0,0,0,0.1);
  border-radius: 8px;
}

.item img {
  width: 100%;
  border-radius: 5px;
}

/* Responsive */
@media (max-width: 768px) {
  .item {
    width: calc(50% - 20px);<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Responsive Gallery</title>
  <link rel="stylesheet" href="styles.css">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
</head>
<body>

  <h2 class="title">Product Showcase</h2>

  <div class="gallery-grid">
    <div class="item">
      <img src="https://via.placeholder.com/300x200" alt="Product 1">
      <h3>Product 1</h3>
      <p>$99.00</p>
    </div>
    <div class="item">
      <img src="https://via.placeholder.com/300x200" alt="Product 2">
      <h3>Product 2</h3>
      <p>$89.00</p>
    </div>
    <div class="item">
      <img src="https://via.placeholder.com/300x200" alt="Product 3">
      <h3>Product 3</h3>
      <p>$79.00</p>
    </div>
    <div class="item">
      <img src="https://via.placeholder.com/300x200" alt="Product 4">
      <h3>Product 4</h3>
      <p>$109.00</p>
    </div>
    <div class="item">
      <img src="https://via.placeholder.com/300x200" alt="Product 5">
      <h3>Product 5</h3>
      <p>$129.00</p>
    </div>
    <div class="item">
      <img src="https://via.placeholder.com/300x200" alt="Product 6">
      <h3>Product 6</h3>
      <p>$59.00</p>
    </div>
  </div>

</body>
</html>

  }
}

@media (max-width: 500px) {
  .item {
    width: 100%;
  }
}
 
4.2)  Ensure that the layout is responsive and adjusts based on the screensize.
=>index.html
=><!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Responsive Gallery</title>
  <link rel="stylesheet" href="styles.css">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
</head>
<body>

  <h2 class="title">Product Showcase</h2>

  <div class="gallery-grid">
    <div class="item">
      <img src="https://via.placeholder.com/300x200" alt="Product 1">
      <h3>Product 1</h3>
      <p>$99.00</p>
    </div>
    <div class="item">
      <img src="https://via.placeholder.com/300x200" alt="Product 2">
      <h3>Product 2</h3>
      <p>$89.00</p>
    </div>
    <div class="item">
      <img src="https://via.placeholder.com/300x200" alt="Product 3">
      <h3>Product 3</h3>
      <p>$79.00</p>
    </div>
    <div class="item">
      <img src="https://via.placeholder.com/300x200" alt="Product 4">
      <h3>Product 4</h3>
      <p>$109.00</p>
    </div>
    <div class="item">
      <img src="https://via.placeholder.com/300x200" alt="Product 5">
      <h3>Product 5</h3>
      <p>$129.00</p>
    </div>
    <div class="item">
      <img src="https://via.placeholder.com/300x200" alt="Product 6">
      <h3>Product 6</h3>
      <p>$59.00</p>
    </div>
  </div>

</body>
</html>


2. styles.css (Responsive CSS Grid with media queries)
=>/* Basic Reset */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: 'Arial', sans-serif;
  background-color: #f4f4f4;
  padding: 20px;
}

/* Title */
.title {
  text-align: center;
  font-size: 2rem;
  margin-bottom: 30px;
  color: #333;
}

/* Grid Layout */
.gallery-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 20px;
}

/* Grid Item */
.item {
  background: #fff;
  border-radius: 8px;
  overflow: hidden;
  box-shadow: 0 2px 10px rgba(0,0,0,0.1);
  text-align: center;
  transition: transform 0.2s ease;
}

.item:hover {
  transform: scale(1.02);
}

.item img {
  width: 100%;
  height: auto;
}

.item h3 {
  margin: 15px 0 5px;
  font-size: 1.2rem;
  color: #007BFF;
}

.item p {
  color: #444;
  font-size: 1rem;
  margin-bottom: 15px;
}

/* Media Queries for Extra Small Screens */
@media (max-width: 500px) {
  .title {
    font-size: 1.5rem;
  }

  .item h3 {
    font-size: 1rem;
  }

  .item p {
    font-size: 0.9rem;
  }
}

4.3)Use media queries to change the layout form obile devices
=>index.html
=><!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Responsive Layout with Media Queries</title>
  <link rel="stylesheet" href="styles.css">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
</head>
<body>

  <h2 class="title">Responsive Product Grid</h2>

  <div class="grid-container">
    <div class="item">
      <img src="https://via.placeholder.com/300x200" alt="Product 1">
      <h3>Product 1</h3>
      <p>$49.99</p>
    </div>
    <div class="item">
      <img src="https://via.placeholder.com/300x200" alt="Product 2">
      <h3>Product 2</h3>
      <p>$59.99</p>
    </div>
    <div class="item">
      <img src="https://via.placeholder.com/300x200" alt="Product 3">
      <h3>Product 3</h3>
      <p>$39.99</p>
    </div>
  </div>

</body>
</html>
=>style.css
=>/* Reset and Base Styles */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: Arial, sans-serif;
  background-color: #f2f2f2;
  padding: 20px;
}

.title {
  text-align: center;
  margin-bottom: 30px;
  font-size: 2rem;
  color: #333;
}

/* Grid Layout for Desktop */
.grid-container {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 20px;
}

/* Product Item Styles */
.item {
  background-color: #fff;
  border-radius: 8px;
  padding: 15px;
  text-align: center;
  box-shadow: 0 0 8px rgba(0, 0, 0, 0.1);
}

.item img {
  width: 100%;
  height: auto;
  border-radius: 6px;
}

.item h3 {
  margin: 15px 0 5px;
  font-size: 1.2rem;
  color: #007BFF;
}

.item p {
  font-size: 1rem;
  color: #555;
}

/*  Media Query for Mobile (≤768px) */
@media (max-width: 768px) {
  .grid-container {
    grid-template-columns: 1fr; /* Stack items in a single column */
  }

  .title {
    font-size: 1.5rem;
  }

  .item h3 {
    font-size: 1rem;
  }

  .item p {
    font-size: 0.9rem;
  }
}

 5.PracticalExample:MultipleTablesandSQLQueries
5.1)  Create multiple tables and perform queries using:
=>CREATE DATABASE shopDB;
USE shopDB;
=>CREATE TABLE customers (
    customer_id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(100),
    email VARCHAR(100),
    city VARCHAR(50)
);
=>CREATE TABLE products (
    product_id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(100),
    price DECIMAL(10, 2),
    stock INT
);
=>CREATE TABLE orders (
    order_id INT PRIMARY KEY AUTO_INCREMENT,
    customer_id INT,
    product_id INT,
    quantity INT,
    order_date DATE,
    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),
    FOREIGN KEY (product_id) REFERENCES products(product_id)
);
=> Insert Sample Data
=>INSERT INTO customers (name, email, city) VALUES
('Amit Sharma', 'amit@example.com', 'Delhi'),
('Neha Patel', 'neha@example.com', 'Mumbai'),
('Raj Verma', 'raj@example.com', 'Chennai');
=>Insert into products
=>INSERT INTO products (name, price, stock) VALUES
('Laptop', 65000, 10),
('Smartphone', 22000, 20),
('Headphones', 1500, 50);
=> Insert into orders
=>INSERT INTO orders (customer_id, product_id, quantity, order_date) VALUES
(1, 1, 1, '2025-08-01'),
(2, 2, 2, '2025-08-02'),
(3, 3, 3, '2025-08-03');
=>  Perform Queries
=>SELECT * FROM customers WHERE city = 'Mumbai';
=>SELECT * FROM products WHERE price > 20000;
=>SELECT 
    o.order_id,
    c.name AS customer_name,
    p.name AS product_name,
    o.quantity,
    o.order_date
FROM orders o
JOIN customers c ON o.customer_id = c.customer_id
JOIN products p ON o.product_id = p.product_id;
=>vSELECT 
    c.name,
    COUNT(o.order_id) AS total_orders
FROM customers c
LEFT JOIN orders o ON c.customer_id = o.customer_id
GROUP BY c.customer_id;

5.2) o SELECT,UPDATE,DELETE,INSERT
=>studen.sql
-- Create a sample database and use it
CREATE DATABASE IF NOT EXISTS schoolDB;
USE schoolDB;

-- Create a simple students table
CREATE TABLE IF NOT EXISTS students (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100),
    age INT,
    grade VARCHAR(10)
);

--  INSERT: Add sample data into the table
INSERT INTO students (name, age, grade) VALUES
('Amit Sharma', 18, 'A'),
('Neha Patel', 17, 'B'),
('Raj Verma', 19, 'A');

--  SELECT: Retrieve all student records
SELECT * FROM students;

--  UPDATE: Change the grade of a specific student
UPDATE students
SET grade = 'A+'
WHERE name = 'Neha Patel';

--  DELETE: Remove a student with age = 19
DELETE FROM students
WHERE age = 19;

5.2)  WHERE,LIKE,GROUPBY,HAVING
=> student_queries.sql
-- Create and use a database
CREATE DATABASE IF NOT EXISTS collegeDB;
USE collegeDB;

-- Create table: students
CREATE TABLE IF NOT EXISTS students (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100),
    city VARCHAR(50)
);

-- Create table: marks
CREATE TABLE IF NOT EXISTS marks (
    mark_id INT AUTO_INCREMENT PRIMARY KEY,
    student_id INT,
    subject VARCHAR(50),
    score INT,
    FOREIGN KEY (student_id) REFERENCES students(id)
);

-- Insert data into students
INSERT INTO students (name, city) VALUES
('Amit Sharma', 'Delhi'),
('Neha Patel', 'Mumbai'),
('Raj Verma', 'Mumbai'),
('Anjali Mehta', 'Delhi');

-- Insert data into marks
INSERT INTO marks (student_id, subject, score) VALUES
(1, 'Math', 88),
(1, 'Science', 76),
(2, 'Math', 92),
(2, 'Science', 81),
(3, 'Math', 55),
(3, 'Science', 60),
(4, 'Math', 91),
(4, 'Science', 87);

--  WHERE: Select students from Mumbai
SELECT * FROM students
WHERE city = 'Mumbai';

--  LIKE: Select students whose name starts with 'A'
SELECT * FROM students
WHERE name LIKE 'A%';

--  GROUP BY: Average score per student
SELECT student_id, AVG(score) AS average_score
FROM marks
GROUP BY student_id;

--  HAVING: Students whose average score is above 80
SELECT student_id, AVG(score) AS average_score
FROM marks
GROUP BY student_id
HAVING AVG(score) > 80;


5.3)  LIMIT,OFFSET,Subqueries,AND,OR,NOT,IN
=>advanced_queries.sql
-- Create and use a sample database
CREATE DATABASE IF NOT EXISTS universityDB;
USE universityDB;

-- Create a students table
CREATE TABLE IF NOT EXISTS students (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100),
    age INT,
    city VARCHAR(50)
);

-- Insert sample student data
INSERT INTO students (name, age, city) VALUES
('Amit Sharma', 21, 'Delhi'),
('Neha Patel', 20, 'Mumbai'),
('Raj Verma', 22, 'Chennai'),
('Anjali Mehta', 23, 'Delhi'),
('Karan Joshi', 19, 'Pune'),
('Priya Singh', 20, 'Mumbai'),
('Mehul Shah', 21, 'Ahmedabad'),
('Sneha Rao', 22, 'Chennai');

--  1. LIMIT: Get only 3 students
SELECT * FROM students
LIMIT 3;

--  2. OFFSET: Skip first 2 rows, return next 3
SELECT * FROM students
LIMIT 3 OFFSET 2;

--  3. AND, OR, NOT: Students from Delhi AND age > 21
SELECT * FROM students
WHERE city = 'Delhi' AND age > 21;

-- Students from Mumbai OR age < 20
SELECT * FROM students
WHERE city = 'Mumbai' OR age < 20;

-- Students NOT from Chennai
SELECT * FROM students
WHERE NOT city = 'Chennai';

--  4. IN: Students from a list of cities
SELECT * FROM students
WHERE city IN ('Delhi', 'Pune');

--  5. Subquery: Students older than the average age
SELECT * FROM students
WHERE age > (SELECT AVG(age) FROM students);




	









